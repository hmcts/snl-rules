package uk.gov.hmcts.reform.sandl.snlrules.rules

import uk.gov.hmcts.reform.sandl.snlrules.model.now.Year;
import uk.gov.hmcts.reform.sandl.snlrules.model.now.Month;
import uk.gov.hmcts.reform.sandl.snlrules.model.now.Day;
import uk.gov.hmcts.reform.sandl.snlrules.model.Problem;
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemReference
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemTypes;
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemSeverities;
import uk.gov.hmcts.reform.sandl.snlrules.model.Session;
import uk.gov.hmcts.reform.sandl.snlrules.model.HearingPart;
import uk.gov.hmcts.reform.sandl.snlrules.utils.DateTimeUtils;

rule "Listing request target schedule has not been adhered to when listed"
    when
        $hearingPart: HearingPart(scheduleEnd != null && scheduleStart != null)
        $session: Session(id == $hearingPart.sessionId &&
         !DateTimeUtils.between(start, $hearingPart.scheduleStart, $hearingPart.scheduleEnd))
    then
        insertLogical(new Problem(ProblemTypes.Listing_policy_violation,
                                  ProblemSeverities.Warn,
                                  "Listing request target schedule has not been adhered to when listed",
                                  new ProblemReference($hearingPart),
                                  new ProblemReference($session)));
end

rule "Listing request is more than 60 days old, and it has not been listed yet"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $hearingPart: HearingPart(sessionId == null && createdAt != null &&
        DateTimeUtils.olderThan(createdAt, $year, $month, $day, 60))
    then
        insertLogical(new Problem(ProblemTypes.Listing_policy_violation,
                                  ProblemSeverities.Warn,
                                  "Listing request is more than 60 days old, and it has not been listed yet",
                                  new ProblemReference($hearingPart)));

end

rule "Listing request target schedule to date is 4 weeks or nearer from today and it has not been listed yet"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $hearingPart: HearingPart(sessionId == null && scheduleEnd != null && scheduleStart != null
        && DateTimeUtils.between(scheduleEnd, $year, $month, $day, 0, 28))
    then
        insertLogical(new Problem(ProblemTypes.Listing_policy_violation,
                                  ProblemSeverities.Warn,
                                  "Listing request target schedule to date is 4 weeks or nearer from today "
                                 + "and it has not been listed yet",
                                 new ProblemReference($hearingPart)));
end

rule "Session is overlisted and 1 day or less before start"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        Session(this == $s && $hpSumMinutes > duration.toMinutes && DateTimeUtils.between(start, $year, $month, $day, 0, 2))
    then
        insertLogical(new Problem(ProblemTypes.Session_utilisation_overlisted,
                                  ProblemSeverities.Warn,
                                  "Session is overlisted and 1 day or less before start",
                                  new ProblemReference($s)));
end

rule "Session is overlisted greater or equal 50 percent and 1 to 3 days before start"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        Session(this == $s && $hpSumMinutes >= duration.toMinutes * 1.5 && DateTimeUtils.between(start, $year, $month, $day, 2, 4))
    then
        insertLogical(new Problem(ProblemTypes.Session_utilisation_overlisted,
                                  ProblemSeverities.Warn,
                                  "Session is overlisted greater or equal 50 percent and 1 to 3 days before start",
                                  new ProblemReference($s)));
end

rule "Session is overlisted greater or equal 100 percent and 3 to 7 days before start"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        Session(this == $s && $hpSumMinutes >= duration.toMinutes * 2 && DateTimeUtils.between(start, $year, $month, $day, 4, 7))
    then
        insertLogical(new Problem(ProblemTypes.Session_utilisation_overlisted,
                                  ProblemSeverities.Warn,
                                  "Session is overlisted greater or equal 100 percent and 3 to 7 days before start",
                                  new ProblemReference($s)));
end

rule "Session is listed less or equal 50 percent 7 days before start"
    when
        Year($year: value)
        Month($month: value)
        Day($day: value)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        Session(this == $s && $hpSumMinutes <= duration.toMinutes / 2 && DateTimeUtils.between(start, $year, $month, $day, 0, 7))
    then
        insertLogical(new Problem(ProblemTypes.Session_utilisation_underlisted,
                                  ProblemSeverities.Warn,
                                  "Session is listed less or equal 50 percent 7 days before start",
                                  new ProblemReference($s)));
end

