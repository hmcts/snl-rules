package uk.gov.hmcts.reform.sandl.snlrules.rules

import java.time.OffsetDateTime;
import java.time.ZoneOffset;

import uk.gov.hmcts.reform.sandl.snlrules.model.now.Year;
import uk.gov.hmcts.reform.sandl.snlrules.model.now.Month;
import uk.gov.hmcts.reform.sandl.snlrules.model.now.Day;
import uk.gov.hmcts.reform.sandl.snlrules.model.Problem;
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemReference
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemTypes;
import uk.gov.hmcts.reform.sandl.snlrules.model.ProblemSeverities;
import uk.gov.hmcts.reform.sandl.snlrules.model.Session;
import uk.gov.hmcts.reform.sandl.snlrules.model.HearingPart;

rule "Hearing case type does not match the session case type"
    when
    	$hearingPart : HearingPart()
    	$session : Session(id == $hearingPart.sessionId)
    	Session(this == $session && caseType != $hearingPart.caseType)
    then
        insertLogical(new Problem(ProblemTypes.Hearing_case_type_does_not_match_the_session_case_type,
                                  ProblemSeverities.Warn,
                                  new ProblemReference("hearingPart", $hearingPart.getId()),
                                  new ProblemReference("session", $session.getId())));
end

rule "Session is overlisted and 1 day or less before start"
    when
        Year($year: year)
        Month($month: month)
        Day($day: day)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        // 2 days when ingoring hour and minute it needs to be
        Session(this == $s && $hpSumMinutes > duration.toMinutes && start.minusDays(2).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) < 0)
    then
        // System.out.println("Total minutes: " + $hpSumMinutes);
        insertLogical(new Problem(ProblemTypes.Session_is_overlisted_1_day_or_nearer_before_start,
                                  ProblemSeverities.Warn,
                                  new ProblemReference("session", $s.getId())));
end

rule "Session is overlisted greater or equal 50 percent and 1 to 3 days before start"
    when
        Year($year: year)
        Month($month: month)
        Day($day: day)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        // 2-5 days when ingoring hour and minute it needs to be
        Session(this == $s && $hpSumMinutes >= duration.toMinutes * 1.5
                && start.minusDays(4).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) < 0
                && start.minusDays(2).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) >= 0)
    then
        // System.out.println("Total minutes: " + $hpSumMinutes);
        insertLogical(new Problem(ProblemTypes.Session_is_overlisted_greater_or_equal_50_percent_and_1_to_3_days_before_start,
                                  ProblemSeverities.Warn,
                                  new ProblemReference("session", $s.getId())));
end

rule "Session is overlisted greater or equal 100 percent and 3 to 7 days before start"
    when
        Year($year: year)
        Month($month: month)
        Day($day: day)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        // 4-8 days when ingoring hour and minute it needs to be
        Session(this == $s && $hpSumMinutes >= duration.toMinutes * 2
                && start.minusDays(8).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) < 0
                && start.minusDays(4).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) >= 0)
    then
        // System.out.println("Total minutes: " + $hpSumMinutes);
        insertLogical(new Problem(ProblemTypes.Session_is_overlisted_greater_or_equal_100_percent_and_3_to_7_days_before_start,
                                  ProblemSeverities.Warn,
                                  new ProblemReference("session", $s.getId())));
end

rule "Session is listed less or equal 50 percent 7 days before start"
    when
        Year($year: year)
        Month($month: month)
        Day($day: day)
        $s : Session()
        accumulate(hp : HearingPart(sessionId == $s.id), $hpSumMinutes: sum(hp.getDuration().toMinutes()))
        // 4-8 days when ingoring hour and minute it needs to be
        Session(this == $s && $hpSumMinutes <= duration.toMinutes / 2
                && start.minusDays(8).compareTo(OffsetDateTime.of($year, $month, $day, 0, 0, 0, 0, ZoneOffset.UTC)) < 0)
    then
        // System.out.println("Total minutes: " + $hpSumMinutes);
        insertLogical(new Problem(ProblemTypes.Session_is_listed_less_or_equal_50_percent_7_days_before_start,
                                  ProblemSeverities.Warn,
                                  new ProblemReference("session", $s.getId())));
end

